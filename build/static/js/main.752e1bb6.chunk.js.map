{"version":3,"sources":["spotify.js","Login.js","components/SidebarOption.jsx","DataLayer.js","components/Sidebar.jsx","components/subComponents/Header.jsx","components/subComponents/SongRow.jsx","components/Body.jsx","components/Footer.jsx","Player.jsx","App.jsx","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","user","type","placeholder","Avatar","images","url","display_name","SongRow","track","album","artists","artist","Body","spotify","discover_weekly","description","tracks","item","Footer","fontSize","Grid","container","spacing","xs","Slider","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","console","log","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.752e1bb6.chunk.js","sourcesContent":["export const authEndpoint = \r\n\"https://accounts.spotify.com/authorize\";\r\nconst redirectUri =\"http://localhost:3000/\";\r\nconst clientId = \"8765545b25344f0095aa282cbadd8093\"\r\n\r\nconst scopes=[\r\n    \"user-read-currently-playing\",\r\n    \"user-read-recently-played\",\r\n    \"user-read-playback-state\",\r\n    \"user-top-read\",\r\n    \"user-modify-playback-state\"\r\n]\r\n\r\n//pulling the access token from the url\r\nexport const getTokenFromUrl = () =>{\r\n    return window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((initial,item)=>{\r\n        let parts = item.split(\"=\")\r\n        //grabbing he first art after spliting\r\n        initial[parts[0]] = decodeURIComponent(parts[1])\r\n        return initial;\r\n    }, {})\r\n}\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n    \"%20\"\r\n    )}&response_type=token&show_dialoge=true`;","import React from 'react'\r\nimport \"./Login.css\"\r\nimport { loginUrl } from './spotify'\r\nconst Login = () => {\r\n  return (\r\n    <div className='login'>\r\n        <img \r\n        src='https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg'\r\n        alt='spotify logo'\r\n        />\r\n        <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport './css/SidebarOption.css'\r\n\r\nconst SidebarOption = ({title,Icon}) => {\r\n  return (\r\n    <div className='sidebarOption'>\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{title}</h4> :  <p>{title} </p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SidebarOption","import React,\r\n{ createContext,useContext,useReducer } from 'react'\r\n\r\n\r\n\r\nexport const DataLayerContext = createContext()\r\n\r\nexport const DataLayer = ({ initialState,\r\n     reducer,children })=> (\r\n        <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n            {children}\r\n        </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext)\r\n","import React from 'react'\r\nimport './css/Sidebar.css'\r\nimport HomeIcon from \"@material-ui/icons/Home\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\"\r\nimport SidebarOption from './SidebarOption'\r\nimport { useDataLayerValue } from '../DataLayer'\r\n\r\nconst Sidebar = () => {\r\n  const [{ playlists }, dispatch] = useDataLayerValue();\r\n\r\n  return (\r\n    <div className='sidebar'>\r\n        <img \r\n        className='sidebar__logo'\r\n        src='https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg'\r\n        alt='spotify image'\r\n        />\r\n        <SidebarOption Icon={HomeIcon} title=\"Home\"/>\r\n        <SidebarOption Icon={SearchIcon} title=\"Search\" />\r\n        <SidebarOption Icon={LibraryMusicIcon} title=\"Your Library\" />\r\n        <br />\r\n        <strong className='sidebar__title'>PLAYLISTS</strong>\r\n        <hr />\r\n\r\n        {/**Mapping through the user's playlist */}\r\n        {playlists?.items?.map((playlist)=>(\r\n          <SidebarOption title={playlist.name}/>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport { Avatar } from '@material-ui/core'\r\nimport { useDataLayerValue } from '../../DataLayer'\r\n\r\nconst Header = () => {\r\n  const [{ user }, dispatch]= useDataLayerValue();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n        <div className=\"header__left\">\r\n            <SearchIcon />\r\n            <input \r\n            type=\"text\" \r\n            placeholder='Search for Artists, Songs,or Albums'\r\n            />\r\n        </div>\r\n\r\n        <div className=\"header__right\">\r\n          <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\r\n            <h4>{user?.display_name} </h4>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './SongRow.css'\r\n\r\nconst SongRow = ({ track }) => {\r\n  return (\r\n    <div className='songRow'>\r\n        <img className='songRow__album' src={track.album.images[0].url} alt=\"album image\" />\r\n        <div className=\"songRow__info\">\r\n            <h1>{track.name}</h1>\r\n            <p>\r\n                {track.artists.map((artist)=>artist.name).join(\", \")}-{\" \"}\r\n                {track.album.name}\r\n            </p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SongRow","import React from 'react'\r\nimport './css/Body.css'\r\nimport Header from './subComponents/Header'\r\nimport { useDataLayerValue } from '../DataLayer'\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\"\r\nimport FavouriteIcon from \"@material-ui/icons/Favorite\"\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\"\r\nimport SongRow from './subComponents/SongRow'\r\n\r\nconst Body = ({spotify}) => {\r\n  const [{ discover_weekly }, dispatch]= useDataLayerValue();\r\n\r\n  return (\r\n    <div className='body'>\r\n      <Header  spotify={spotify}/>\r\n\r\n      <div className=\"body__info\">\r\n        <img \r\n        src={discover_weekly?.images[0].url}\r\n        alt=\"discover weekly\" />\r\n\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>Discover weekly</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon className='body__shuffle' />\r\n          <FavouriteIcon />\r\n          <MoreHorizIcon/>\r\n        </div>\r\n\r\n        {discover_weekly?.tracks.items.map((item) =>(\r\n          <SongRow track={item.track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body","import React from 'react'\r\nimport './css/Footer.css'\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\"\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\"\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\"\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\"\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\"\r\nimport { Grid,Slider } from '@material-ui/core'\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\"\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\"\r\nconst Footer = () => {\r\n  return (\r\n    <div className='footer'>\r\n      <div className=\"footer__left\">\r\n        <img \r\n        className='footer__albumLogo'\r\n        src=\"https://www.voxlyrics.com/wp-content/uploads/2023/03/Davido-%E2%80%93-Timeless-EP-Album-1.jpg\" \r\n        alt=\"\" />\r\n        <div className=\"footer__songInfo\">\r\n          <h4>Yeah!</h4>\r\n          <p>Usher</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"footer__center\">\r\n        <ShuffleIcon className='footer__green'/>\r\n        <SkipPreviousIcon className='footer__icon' />\r\n        <PlayCircleOutlineIcon fontSize='large' className='footer__icon' />\r\n        <SkipNextIcon className='footer__icon'/>\r\n        <RepeatIcon className='footer__green' />\r\n      </div>\r\n\r\n      <div className=\"footer__right\">\r\n       <Grid container spacing={2}>\r\n        <Grid item>\r\n          <PlaylistPlayIcon />\r\n        </Grid>\r\n        <Grid item>\r\n          <VolumeDownIcon />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider />\r\n        </Grid>\r\n       </Grid>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport \"./Player.css\"\r\nimport Sidebar from './components/Sidebar'\r\nimport Body from './components/Body'\r\nimport Footer from './components/Footer'\r\n\r\nconst Player = ({ spotify }) => {\r\n  return (\r\n    <div className='player'>\r\n        <div className='player__body'>\r\n            <Sidebar />\r\n            <Body spotify={spotify}/>\r\n        </div>\r\n\r\n        <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player","import React, { useEffect, useState } from 'react'\nimport Login from './Login'\nimport { getTokenFromUrl } from './spotify'\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport Player from './Player'\nimport { useDataLayerValue } from './DataLayer'\n\nconst spotify = new SpotifyWebApi();\n\nconst App = () => {\n  const [{ user,token }, dispatch] = useDataLayerValue();\n\n  //Runcode based on a given condition\n  useEffect(()=>{\n    const hash = getTokenFromUrl();\n    window.location.hash= \"\";\n    const _token = hash.access_token;\n\n    //check if token exists\n    if(_token){\n      dispatch({\n        type:\"SET_TOKEN\",\n        token:_token,\n      })\n      //giving the access token to the spotify api\n      spotify.setAccessToken(_token)\n      \n      //getting the user's account\n      spotify.getMe().then(user =>{\n        dispatch({\n          type: 'SET_USER',\n          user:user\n        });\n      });\n\n      //Getting a User's playlist from spotify and then dispatch to the data layer\n      spotify.getUserPlaylists().then((playlists)=>{\n        dispatch({\n          type:\"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist('0NzXTyUC71d3dgBWDUg3qk').then(response =>\n        dispatch({\n          type:\"SET_DISCOVER_WEEKLY\",\n          discover_weekly:response,\n        })\n        )\n    }\n\n    console.log(\"User token = \", token)\n  }, []);\n\n  console.log(user);\n\n  return (\n    <div className='app'>\n      {/* change whats going to be rendered after the user logs in */}\n      {\n        token ?(\n          <Player spotify={spotify}/>\n        ) : (\n            <Login />\n        )\n      }\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState ={\r\n    user:null,\r\n    playlists:[],\r\n    playing: false,\r\n    item:null,\r\n   // token:'BQCz-tRgipe2c3gBa2IiY03SfCOJuiR7qHG3vGRiFLEyCSWGl-…erwUPwCfGSfpoWhwsgOQWn8WuWvEMPgZqopB2LAkJkgRgjbdg'\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n\r\n    switch(action.type) {\r\n        //dispatchin an action\r\n        //Action -> type, [payload]\r\n        case 'SET_USER':\r\n            return{\r\n                ...state,\r\n                user: action.user\r\n            };\r\n        case 'SET_TOKEN':\r\n            return{\r\n                ...state,\r\n                token:action.token,\r\n            };\r\n        case 'SET_PLAYLISTS':\r\n            return{\r\n                ...state,\r\n                playlists: action.playlists,\r\n            };\r\n        case 'SET_DISCOVER_WEEKLY':\r\n            return{\r\n                ...state,\r\n                discover_weekly:action.discover_weekly\r\n            }   \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { DataLayer } from './DataLayer'\nimport reducer, { initialState } from './reducer'\n\nReactDOM.render(\n    <React.StrictMode>\n      <DataLayer initialState={initialState}\n    reducer={reducer}>\n      <App />\n    </DataLayer>\n    </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}